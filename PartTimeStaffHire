public class PartTimeStaffHire extends StaffHire {
    private final int workingHour;
    private final double wagesPerHour;
    private String shifts;
    private boolean terminated;
    
    public PartTimeStaffHire(int vacancyNumber, String designation, String jobType,
                           String staffName, String joiningDate, String qualification,
                           String appointedBy, boolean joined, int workingHour, 
                           double wagesPerHour, String shifts) {
        super(vacancyNumber, designation, jobType, staffName, joiningDate, qualification, appointedBy, joined);
        this.workingHour = workingHour;
        this.wagesPerHour = wagesPerHour;
        this.shifts = shifts;
        this.terminated = false;
    }
    
    public int getWorkingHour() {
        return workingHour;
    }
    
    public double getWagesPerHour() {
        return wagesPerHour;
    }
    
    public String getShifts() {
        return shifts;
    }
    
    public boolean isTerminated() {
        return terminated;
    }
    
    public void setShifts(String shifts) {
        if (isJoined() && !terminated) {
            this.shifts = shifts;
        } else {
            System.out.println("Staff is either not appointed or terminated. Cannot set shifts.");
        }
    }
    
    public void terminateStaff() {
        if (terminated) {
            System.out.println("Staff is already terminated.");
        } else {
            setStaffName("");
            setJoiningDate("");
            setQualification("");
            setAppointedBy("");
            setJoined(false);
            this.terminated = true;
            System.out.println("Staff has been terminated successfully.");
        }
    }
    
    @Override
    public void display() {
        super.display();
        if (isJoined() && !terminated) {
            System.out.println("Working Hours: " + workingHour);
            System.out.println("Wages Per Hour: " + wagesPerHour);
            System.out.println("Shifts: " + shifts);
            System.out.println("Income Per Day: " + (workingHour * wagesPerHour));
            System.out.println("Terminated: " + (terminated ? "Yes" : "No"));
        }
    }
} 
